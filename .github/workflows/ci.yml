name: ci

on:
  push:
    branches:
      - main

permissions:
  id-token: write       # REQUIRED for OIDC login
  contents: read         # optional, but usually needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Debug OIDC Token Request
      run: |
        echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
        echo "GITHUB_REF: $GITHUB_REF"
        echo "GITHUB_SHA: $GITHUB_SHA"

    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ env.AZURE_CLIENT_ID }}
        tenant-id: ${{ env.AZURE_TENANT_ID }}
        subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: false

    - name: Fetch secrets from Azure Key Vault
      uses: azure/get-keyvault-secrets@v1
      with:
        keyvault: 'myKeyVaultDemo2'
        secrets: ACR-LOGIN-SERVER,ACR-USERNAME,ACR-PASSWORD

    - name: Install Podman
      run: |
        sudo apt update
        sudo apt install -y podman

    # Build container image with ACR login server from Key Vault
    - name: Build container image
      run: |
        podman build -t ${{ steps.get-secrets.outputs.ACR-LOGIN-SERVER }}/hello:${{ github.sha }} -f Dockerfile .

    # Login to ACR
    - name: Login to ACR
      run: |
        podman login ${{ steps.get-secrets.outputs.ACR-LOGIN-SERVER }} \
          -u "${{ steps.get-secrets.outputs.ACR-USERNAME }}" \
          -p "${{ steps.get-secrets.outputs.ACR-PASSWORD }}"

    # Push image
    - name: Push image to ACR
      run: |
        podman push ${{ steps.get-secrets.outputs.ACR-LOGIN-SERVER }}/hello:${{ github.sha }}


## name: ci 
# on: 
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Install Podman
#       run: |
#         sudo apt update
#         sudo apt install -y podman

#     - name: Build container image
#       run: |
#         podman build -t ${{ secrets.ACR_LOGIN_SERVER }}/hello-gitops:${{ github.sha }} -f Dockerfile .


#     - name: Login to ACR
#       run: |
#         podman login ${{ secrets.ACR_Login_SERVER}} -u ${{secrets.ACR_USERNAME}}  -p ${{ secrets.ACR_PASSWORD}}

#     - name: push image
#       run: |
#         podman push  ${{ secrets.ACR_Login_SERVER}}/hello-gitops:${{ github.sha}}

#     # - name: Update manifest image tag
#     #   run: |
#     #     sed -i "s|latest|${GITHUB_SHA}|" deploy/deployment.yml


#     # - name: commit and push manifest changes
#     #   run: |   
#     #     git config user.name "ci-bot"
#     #     git config user.email "ci@ci.com"
#     #     git add deploy/deployment.yml
#     #     git commit -m "update tag to ${{ github.sha}}"
#     #     git push

